<<<<<<< HEAD
<<<<<<< HEAD
"Hello World"
5 + 5
"Hello World"
5+5
"Hello WOrld"
5+5
2+2
3^2
+2
3^2
# R Commands
variable <- 4
num2 <- 2
num2 <- 2
# R Commands
num2 <- 2
num1 + num2
num1 + num2
num2 <- 2
num2 = 2
num1 + num2
num2 = 2
num2 = 2
num2 <- 2
num2 <- 2
num2 <- 2
num2 <- 2
num2 <- 2
num2 <- 2
source("~/R/RCommands.R")
source("~/R/RCommands.R")
# Em seguida, usamos a função boxplot(variável, main="título do grafico", col="cor do gráfico") para construir o gráfico.
> boxplot(Idade, main="Boxplot: Idade", col="blue")
# Em seguida, usamos a função boxplot(variável, main="título do grafico", col="cor do gráfico") para construir o gráfico.
boxplot(Idade, main="Boxplot: Idade", col="blue")
source("~/R/boxplot_example.R")
source("~/R/boxplot_example.R")
source("~/R/boxplot_example.R")
source("~/R/boxplot_example.R")
# Em seguida, usamos a função boxplot(variável, main="título do grafico", col="cor do gráfico") para construir o gráfico.
boxplot(Idade, main="Boxplot: Idade", col="green")
source("~/R/boxplot_example.R")
#Carregando pacotes exigidos: MASS
data(cats)
boxplot(cats$Bwt~cats$Sex, main="Boxplot Comparativo: Peso x Sexo", col=c("red", "green"))
source("~/R/boxplot_example.R")
# Em seguida, usamos a função boxplot(variável, main="título do grafico", col="cor do gráfico") para construir o gráfico.
boxplot(Idade, main="Boxplot: Idade", col="green")
source("~/R/boxplot_example.R")
boxplot(cats$Bwt~cats$Sex, main="Boxplot Comparativo: Peso x Sexo", col=c("red", "green"))
boxplot(cats$Bwt~cats Sex, main="Boxplot Comparativo: Peso x Sexo", col=c("red", "green"))
source("~/R/boxplot_example.R")
'Hello World'
2+2
boxplot(cats$Bwt~cats$ Sex, main="Boxplot Comparativo: Peso x Sexo", col=c("red", "green"))
factorial(rep(2, 20))
factorial(rep(3, 20))
source("~/R/Lab/ficha1.R")
source("~/R/Lab/ficha1.R")
source("~/R/Lab/ficha1.R")
source("~/R/Lab/ficha1.R")
source("~/R/Lab/ficha1.R")
source("~/R/Lab/ficha1.R")
source("~/R/Lab/ficha1.R")
source("~/R/Lab/ficha1.R")
source("~/R/Lab/ficha1.R")
source("~/R/Lab/ficha1.R")
##### FICHA 1 #####
# Exerc 1
x1 <- c(23,18,19,19,21,23)
ls() #verificar itens no workspace
mean(x)
# Exerc 1
x1 <- c(23,18,19,19,21,23)
ls() #verificar itens no workspace
mean(x)
??permutation
permutations(2)
# Exerc 2
?getwd
?setwd
getwd() #obter a atual diretoria de trabalho
dir() #ficheiros presentes no diretório
list.files() #ficheiros presentes no diretório
# Exerc 3
save.image()
dir()
# Exerc 5
c(1,2,3,6,9,8) #concatena valores
?rep
rep(6, 4) #faz a replicação de valores
?seq
seq(1, 9, by=1) #cria sequências
# Exerc 6
x <- c(23,18,19,19,21,23)
y <- c(1.75,1.84,1.65,1.78,1.64,1.79)
u <- 3
z <- 2
w <- 1:6
x + y
x * y
x * z
y ^ z
u < z #u menor que z
y < w # booleano
sqrt(x)
sum(x)
prod(x)
?cumsum
cumsum(x) #faz soma comultativa
?cumprod
cumprod(x)
?factorial
factorial(w)
?choose
choose(3,2)
choose(w,2)
x[x>18 & x<22]
x[w!=2]
w!=2
## Exerc 7
a7 <- rep(2, 20)^seq(1:20)
b7 <- ((rep(2, 21)^seq(0, 20)))*((rep(0.8, 21)^seq(20, 0)))
c7 <- ((rep(exp(1), 21)^rep((-2),21)))*
((
(rep(2, 21)^seq(0, 20))/
(factorial(seq(0,20)))
))
rep(3:36, 3)
seq(3, 36, by=3)
seq(1, 34, by=4)
seq(1, 34, by=3)
((rep(0.4, 12))^(seq(1, 34, by=3)))
((rep(exp(1), 12))^(seq(3, 36, by=3)))
((rep(0.4, 12))^(seq(1, 34, by=3)))
((rep(exp(1), 12))^(seq(3, 36, by=3)))*((rep(0.4, 12))^(seq(1, 34, by=3)))
d7 <- (((rep(exp(1), 12))^(seq(3, 36, by=3)))*((rep(0.4, 12))^(seq(1, 34, by=3))))
d7
(((rep(2, 10))^(seq(1,10)))*(seq(1,10)))
(((rep(2, 10))^(seq(1,10)))/(seq(1,10)))
##Exerc 8
w * 3
(((rep(exp(1), 21))^(rep((-2), 21)))*((rep(2,21))^(seq(0,20))))/(factorial(seq(0,20)))
(seq(2, 30))
(seq(2, 30))^(seq(2, 29))
(seq(2, 30))^(seq(2, 28))
(seq(2, 30))^(seq(2, 29))
length(seq(2, 30))
(seq(2, 30))^(rep(2, 29))
3*((seq(2,30))^(rep(3, 29)))
((seq(2, 30))^(rep(2, 29)))+(3*((seq(2,30))^(rep(3, 29))))
b8 <- ((seq(2, 30))^(rep(2, 29)))+(3*((seq(2,30))^(rep(3, 29))))
length(seq(1, 30))
((rep(2,30))^(seq(1,30)))
((rep(2,30))^(seq(1,30)))/(seq(1,30))
(((rep(3,30))^(seq(1,30)))/((seq(1,30))^(rep(2,30))))
(((rep(2,30))^(seq(1,30)))/(seq(1,30)))+(((rep(3,30))^(seq(1,30)))/((seq(1,30))^(rep(2,30))))
c8 <- (((rep(2,30))^(seq(1,30)))/(seq(1,30)))+(((rep(3,30))^(seq(1,30)))/((seq(1,30))^(rep(2,30))))
## Exerc 9
?cbind
A <- cbind(x,y)
A
type(A)
?type
typeof(A)
A <- cbind(x,y,x1)
typeof(A)
A <- cbind(x,y)
typeof(A)
B <- rbind(x,y)
B
B <- cbind(x, y, w)
D <- cbind(x, y, w)
D
D <- cbind(x, y, w, 1)
D
D <- cbind(x, y, w)
D
D <- cbind(x, y, w, seq(1,6))
D
D <- cbind(x, y, w, seq(1,3))
D
D <- cbind(x, y, w, seq(1,7))
D
D <- cbind(x, y, w, 1)
D
dim(A)
ncol(A)
class(x)
typeof(x)
class(x)
typeof(x)
class(x)
class(A)
typeof(A)
typeof(1)
typeof(2)
typeof('2')
class(x)
class(A)
class(´A´)
class("a")
E <- cbind(x, y, z)
E
F <- data.frame
F
F <- data.frame(x, y, z)
F
class(E)
class(F)
dim(F)
dim(E)
str(F)
?str
str(E)
mylist <- list(idade=x, altura=y, nome=z, ind=w, outro=u)
mylist
class(mylist)
class(mylist$idade)
str(mylist)
mean(mylist$idade)
summary(mylist)
mean(mylist$idade)
source("~/R/Lab/ficha1.R", echo=TRUE)
View(mylist)
View(D)
summary(F)
names(F)
## Exerc 9
?diag
diag(3)
diag(10, 3, 4)
A <- matrix(c(5,1,0,
3,−1,2,
A1 <- matrix(c(5,1,0,3,(-1),2,4,0,(-1)),
nrow=3,byrow=TRUE)
A1
B1 <- diag(c(1,2,4))
B1
?det
det(A)
det(A1)
dim(A)
?inverse
?solve
solve(A)
solve(A1)
dim(A1)
solve(A1)
A1
crossprod(solve(A1), A1)
solve(A1) %*% A1
crossprod((solve(A1)), A1)
solve(A1) %*% A1
(solve(A1)) %*% A1
crossprod((solve(A1)), A1)
(solve(A1)) %*% A1
crossprod((solve(A1)), A1)
(solve(A1)) %*% A1
# Criar duas matrizes de exemplo
matriz1 <- matrix(c(1, 2, 3, 4), nrow = 2, byrow = TRUE)
matriz2 <- matrix(c(5, 6, 7, 8), nrow = 2, byrow = TRUE)
# Multiplicar as matrizes usando o operador %*%
matriz_resultado <- matriz1 %*% matriz2
# Imprimir a matriz resultado
print(matriz_resultado)
# Multiplicar as matrizes usando o operador %*%
matriz_resultado <- matriz1 %*% matriz2
matriz_resultado2 <- crossprod(matriz1, matriz2)
# Imprimir a matriz resultado
print(matriz_resultado)
print(matriz_resultado2)
dim(A1)
y1 <- c(1,2,3)
?det
det(A1)
dim(A1)
?solve
solve(A1)
A1
(solve(A1)) %*% A1
solve(A1) * y1
solve(A1) %*% y1
A1 * x1
A1 %*% x1
dim(x1)
x1 <- solve(A1) %*% y1
dim(x1)
A1 %*% x1
y1
fim(y1)
dim(y1)
y1 <- c(1,2,3)
?det
det(A1)
dim(A1)
?solve
solve(A1)
A1
(solve(A1)) %*% A1
x1 <- solve(A1) %*% y1
dim(x1)
A1 %*% x1
y1
dim(y1)
dim(y1)
dim(x1)
x1 <- solve(A1) * y1
dim(x1)
A1 %*% x1
y1
dim(y1)
dim(x1)
A1 %*% x1
x1 <- solve(A1) %*% y1
dim(x1)
A1 %*% x1
y1
dim(y1)
dim(x1)
## Exerc 10
?airquality
airquality
air_data <- airquality
str(air_data)
View(air_data)
summary(air_data)
data_june <- subset(air_data, Month==6)
data_june
summary(data_june)
?split
dados_por_mes <- split(airquality$Temp, airquality$Month)
split(airquality$Temp, airquality$Month)
?sapply
split(airquality$Temp, airquality$Month)
mes_temp <- split(airquality$Temp, airquality$Month)
sapply(mes_temp, mean)
sapply(mes_temp, max)
summary(air_data)
aplly(is.na(air_data), 2, sum)
apply(is.na(air_data), 2, sum)
?apply
?witch
?which
which(is.na(air_data$Solar.R))
which.max(is.na(air_data$Solar.R))
which.max(air_data$Solar.R)
## Exerc 10
?airquality
subset(air_data, Temp>90)
subset(air_data, Temp>90 & Ozone>70)
subset(air_data, max(Wind))
subset(air_data, Wind == max(Wind))
table(air_data)
table(air_data$Month)
library(IRLR)
library(ILSR)
library(ISLR)
library(ISLR)
data(ISLR)
library(ISLR)
data(ISLR)
ISLR
?ISLR
??ISLR
library(cars98)
data(cars98)
library(MASS)
data(cars98)
library(MASS); data(Cars93); #attach(Cars93)
table(Cars93)
library(ISLR)
View(Cars93)
library(mlr3oml)
library(mlr3oml); library(mlr3)
install.packages('mlr3oml')
library(mlr3oml); library(mlr3)
data(mlr3)
??mlr3
library(mlr3oml)
library(mlr3oml); data(mlr3)
table(mlr3)
table(mlr3oml)
library(mlr3oml)
table(mlr3oml)
setwd("C:/Users/kassi/Documents/Python/lab/cars")
library(readr)
library(zoo)
PT_2022 <- read_csv("C:/Users/vanes/OneDrive/Desktop/LE/aulas.py/CO2_ProjectShared/modificated-data/PT-2022.csv")
# Colunas de v.a's quantitativas
col_numericas <- PT_2022[,c("Test weight (kg)", "Test Emission CO2 (g/km)", "Whell Base (mm)", "Engine Capacity (cm3)", "Engine Power (kW)")]
# Summary: Estatística Descritiva das v.a's quantitativas
summary_stats <- summary(col_numericas)
# Desvio Padrão das v.a's quantitativas
desvio_padrao <- round(sapply(col_numericas, sd, na.rm = TRUE),2)
# Summary + sd das v.a's quantitativas
summary_stats_with_sd <- rbind(summary_stats, "Desvio Padrão" = desvio_padrao)
View(summary_stats_with_sd)
table(summary_stats_with_sd)
dados_2022 <- data.frame(summary_stats_with_sd)
dados_2022
write.csv(dados_2022, "dados_2022_sd_resumoEstat.csv")
elementos_nan <- is.na(col_numericas)
elementos_nan
table(elementos_nan)
# Função para verificar se há NaN na coluna
has_nan <- function(coluna) {
any(is.na(coluna))
}
# Aplicando a função a cada coluna e retornando um vetor lógico
colunas_com_nan <- apply(PT_2022, 2, has_nan)
# Obtendo os nomes das colunas com NaN
nomes_colunas_nan <- names(PT_2022)[colunas_com_nan]
# Exibindo os nomes das colunas com NaN
print(nomes_colunas_nan)
PT_2022 <- read_csv("C:/Users/vanes/OneDrive/Desktop/LE/aulas.py/CO2_ProjectShared/modificated-data/PT-2022.csv")
# Colunas de v.a's quantitativas
col_numericas <- PT_2022[,c("Test weight (kg)", "Test Emission CO2 (g/km)", "Whell Base (mm)", "Engine Capacity (cm3)", "Engine Power (kW)")]
elementos_nan <- is.na(col_numericas)
table(elementos_nan)
# Função para verificar se há NaN na coluna
has_nan <- function(coluna) {
any(is.na(coluna))
}
# Aplicando a função a cada coluna e retornando um vetor lógico
colunas_com_nan <- apply(PT_2022, 2, has_nan)
# Obtendo os nomes das colunas com NaN
nomes_colunas_nan <- names(PT_2022)[colunas_com_nan]
# Exibindo os nomes das colunas com NaN
print(nomes_colunas_nan)
# Summary: Estatística Descritiva das v.a's quantitativas
summary_stats <- summary(col_numericas)
# Desvio Padrão das v.a's quantitativas
desvio_padrao <- round(sapply(col_numericas, sd, na.rm = TRUE),2)
# Summary + sd das v.a's quantitativas
summary_stats_with_sd <- rbind(summary_stats, "Desvio Padrão" = desvio_padrao)
View(summary_stats_with_sd)
table(PT_all$"Fuel type")
library(readr)
#Importar dados
PT_all <- read_csv("modificated-data/PT-all.csv")
table(PT_2021$"Fuel type")
table(PT_2022$`Fuel type`)
PT_2022 <- read_csv("C:/Users/vanes/OneDrive/Desktop/LE/aulas.py/CO2_ProjectShared/modificated-data/PT-2022.csv")
# Colunas de v.a's quantitativas
col_numericas <- PT_2022[,c("Test weight (kg)", "Test Emission CO2 (g/km)", "Whell Base (mm)", "Engine Capacity (cm3)", "Engine Power (kW)")]
elementos_nan <- is.na(col_numericas)
table(elementos_nan)
# Função para verificar se há NaN na coluna
has_nan <- function(coluna) {
any(is.na(coluna))
}
# Aplicando a função a cada coluna e retornando um vetor lógico
colunas_com_nan <- apply(PT_2022, 2, has_nan)
# Obtendo os nomes das colunas com NaN
nomes_colunas_nan <- names(PT_2022)[colunas_com_nan]
# Exibindo os nomes das colunas com NaN
print(nomes_colunas_nan)
# Summary: Estatística Descritiva das v.a's quantitativas
summary_stats <- summary(col_numericas)
# Desvio Padrão das v.a's quantitativas
desvio_padrao <- round(sapply(col_numericas, sd, na.rm = TRUE),2)
# Summary + sd das v.a's quantitativas
summary_stats_with_sd <- rbind(summary_stats, "Desvio Padrão" = desvio_padrao)
View(summary_stats_with_sd)
dados_2022 <- data.frame(summary_stats_with_sd)
col_categoricas <- PT_2022[,c("ID", "Version", "Make", "Model", "Fuel type")]
View(col_categoricas)
# Número de cada Versão, Marca, Modelo e Combustível
table(PT_2022$'Version')
table(PT_2022$'Make')
table(PT_2022$'Model')
table(PT_2022$`Fuel type`)
1264+14822
=======
lista_dfs <- list()
for (df_name in PT_data) {
get_df <- get(df_name)
fuels_type <- names(table(get_df$"Fuel type"))
cores <- c(rgb(245,140,76,maxColorValue = 255), #diesel
rgb(120,200,250, maxColorValue = 255), #eletrico
rgb(245,191,76,maxColorValue = 255), #gasolina
rgb(12,124,250,maxColorValue = 255)) #hibrido
df <- as.data.frame(table(get_df$`Fuel type`))
df_cores <- data.frame(Fuel_type = fuels_type, Cor = cores)
df <- merge(df, df_cores, by.x = "Var1", by.y = "Fuel_type", all.x = TRUE)
# Adiciona uma coluna com o ano de acontecimento
df$Ano <- as.numeric(substring(df_name, 4, 7))  # Extrai o ano do nome do dataframe
# Adiciona o dataframe à lista
lista_dfs[[df_name]] <- df
}
PT_data <- c('PT_2018','PT_2019','PT_2020','PT_2021','PT_2022')
for (df_name in PT_data){
df <- get(df_name)
max_brand <- max(table(df$Make))
min_brand <- min(table(df$Make))
name_max <- names(table(df$Make))[table(df$Make) == max_brand]
name_min <- names(table(df$Make))[table(df$Make) == min_brand]
cat(df_name,'\nMAX:', name_max,max_brand,'\nMIN: ',name_min,min_brand,'\n\n')
}
for (df_name in PT_data){
df <- get(df_name)
max_model <- max(table(df$Model))
name_max <- names(table(df$Model))[table(df$Model) == max_model]
cat(df_name,'\nMAX:', name_max,max_model,'\n\n\n')
}
# Lista para guardar os dataframes
lista_dfs <- list()
for (df_name in PT_data) {
get_df <- get(df_name)
fuels_type <- names(table(get_df$"Fuel type"))
cores <- c(rgb(245,140,76,maxColorValue = 255), #diesel
rgb(120,200,250, maxColorValue = 255), #eletrico
rgb(245,191,76,maxColorValue = 255), #gasolina
rgb(12,124,250,maxColorValue = 255)) #hibrido
df <- as.data.frame(table(get_df$`Fuel type`))
df_cores <- data.frame(Fuel_type = fuels_type, Cor = cores)
df <- merge(df, df_cores, by.x = "Var1", by.y = "Fuel_type", all.x = TRUE)
# Adiciona uma coluna com o ano de acontecimento
df$Ano <- as.numeric(substring(df_name, 4, 7))  # Extrai o ano do nome do dataframe
# Adiciona o dataframe à lista
lista_dfs[[df_name]] <- df
}
# Concatena os dataframes da lista
df_concatenado <- do.call(rbind, lista_dfs)
ggplot(df_concatenado, aes(x = factor(Ano), y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Frequência de Combustíveis por Ano",
x = "Ano", y = "Frequency") +
scale_fill_manual(values = df_concatenado$Cor, name = "Fuel type") +
=======
novo_dataframe$Freq <- round(dados$media_CO2, 2); novo_dataframe
novo_dataframe$Freq <- rbind(df$Freq); novo_dataframe
novo_dataframe <- data.frame(Freq = numeric(nrow(dados)+nrow(df)),
Var1 = numeric(nrow(dados)+nrow(df)),
Ano = numeric(nrow(dados)+nrow(df))); novo_dataframe
novo_dataframe$Freq <- round(dados$media_CO2, 2); novo_dataframe
novo_dataframe$Freq <- (df$Freq); novo_dataframe
novo_dataframe <- data.frame(Freq = numeric(nrow(dados)+nrow(df)),
Var1 = numeric(nrow(dados)+nrow(df)),
Ano = numeric(nrow(dados)+nrow(df))); novo_dataframe
novo_dataframe$Freq <- round(dados$media_CO2, 2); novo_dataframe
novo_dataframe$Freq <- (df$Freq); novo_dataframe
novo_dataframe$Freq <- c((df$Freq),round(dados$media_CO2, 2)); novo_dataframe
nrow(dados)
novo_dataframe$Var1 <- c(df$Var1,rep('Media CO2',5)); novo_dataframe
novo_dataframe$Freq <- c((df$Freq),round(dados$media_CO2, 2)); novo_dataframe
novo_dataframe$Var1 <- c(rep('E',5),rep('Media CO2',5)); novo_dataframe
novo_dataframe <- data.frame(Freq = numeric(nrow(dados)+nrow(df)),
Var1 = numeric(nrow(dados)+nrow(df)),
Ano = numeric(nrow(dados)+nrow(df))); novo_dataframe
novo_dataframe$Freq <- c((df$Freq),round(dados$media_CO2, 2)); novo_dataframe
novo_dataframe$Var1 <- c(rep('E',5),rep('Media CO2',5)); novo_dataframe
novo_dataframe$Ano <- df$Ano
novo_dataframe$Ano <- df$Ano; novo_dataframe
eletric_CO2 <- data.frame(Freq = numeric(nrow(dados)+nrow(df)),
Var1 = numeric(nrow(dados)+nrow(df)),
Ano = numeric(nrow(dados)+nrow(df))); eletric_CO2
eletric_CO2 <- c((df$Freq),round(dados$media_CO2, 2)); eletric_CO2
eletric_CO2 <- c(rep('E',5),rep('Media CO2',5)); eletric_CO2
eletric_CO2 <- df$Ano; eletric_CO2
eletric_CO2 <- data.frame(Freq = numeric(nrow(dados)+nrow(df)),
Var1 = numeric(nrow(dados)+nrow(df)),
Ano = numeric(nrow(dados)+nrow(df))); eletric_CO2
eletric_CO2 <- c((df$Freq),round(dados$media_CO2, 2)); eletric_CO2
eletric_CO2 <- c(rep('E',5),rep('Media CO2',5)); eletric_CO2
eletric_CO2 <- df$Ano; eletric_CO2
ggplot(df, aes(x = factor(Ano), y = Freq, group=1, label=Freq, fill=Var1)) +
geom_line(color=rgb(120,200,250, maxColorValue = 255)) +
geom_point(color='blue') +
labs(title = "Frequência de Carros Elétricos por Ano",
x = "Ano",
y = "Carros em circulação")+
geom_text(nudge_y = 10)+
scale_fill_manual(values = df$Cor, name = "Combustível") +
>>>>>>> c27d5f943cf57929412c44fdf4dcdcb7b1fe9460
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
eletric_CO2 <- data.frame(Freq = numeric(nrow(dados)+nrow(df)),
Var1 = numeric(nrow(dados)+nrow(df)),
Ano = numeric(nrow(dados)+nrow(df))); eletric_CO2
eletric_CO2 <- c((df$Freq),round(dados$media_CO2, 2)); eletric_CO2
eletric_CO2 <- c(rep('E',5),rep('Media CO2',5)); eletric_CO2
eletric_CO2 <- df$Ano; novo_dataframe
eletric_CO2 <- data.frame(Freq = numeric(nrow(dados)+nrow(df)),
Var1 = numeric(nrow(dados)+nrow(df)),
Ano = numeric(nrow(dados)+nrow(df))); eletric_CO2
eletric_CO2$Freq <- c((df$Freq),round(dados$media_CO2, 2)); eletric_CO2
eletric_CO2$Var1 <- c(rep('E',5),rep('Media CO2',5)); eletric_CO2
eletric_CO2$Ano <- df$Ano; novo_dataframe
ggplot(df, aes(x = factor(Ano), y = Freq, group=Var1, label=Freq, fill=Var1)) +
geom_line(color=rgb(120,200,250, maxColorValue = 255)) +
geom_point(color='blue') +
labs(title = "Frequência de Carros Elétricos por Ano",
x = "Ano",
y = "Carros em circulação")+
geom_text(nudge_y = 10)+
scale_fill_manual(values = df$Cor, name = "Combustível") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(eletric_CO2, aes(x = factor(Ano), y = Freq, group=Var1, label=Freq, fill=Var1)) +
geom_line(color=rgb(120,200,250, maxColorValue = 255)) +
geom_point(color='blue') +
labs(title = "Frequência de Carros Elétricos por Ano",
x = "Ano",
y = "Carros em circulação")+
geom_text(nudge_y = 10)+
scale_fill_manual(values = df$Cor, name = "Combustível") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(eletric_CO2, aes(x = factor(Ano), y = Freq, group=Var1, label=Freq, fill=Var1)) +
geom_line(color=rgb(120,200,250, maxColorValue = 255)) +
geom_point(color=Var1) +
labs(title = "Frequência de Carros Elétricos por Ano",
x = "Ano",
y = "Carros em circulação")+
geom_text(nudge_y = 10)+
scale_fill_manual(values = df$Cor, name = "Combustível") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(eletric_CO2, aes(x = factor(Ano), y = Freq, group=Var1, label=Freq, fill=Var1)) +
geom_line(color=rgb(120,200,250, maxColorValue = 255)) +
geom_point(color=Var1) +
labs(title = "Frequência de Carros Elétricos por Ano",
x = "Ano",
y = "Carros em circulação")+
geom_text(nudge_y = 10)+
scale_fill_manual(values = df$Cor, name = "Combustível") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
eletric_CO2$Var1 <- c(rep('E',5),rep('Media CO2',5)); eletric_CO2
eletric_CO2$Ano <- df$Ano; novo_dataframe
ggplot(eletric_CO2, aes(x = factor(Ano), y = Freq, group=Var1, label=Freq, fill=Var1)) +
geom_line(color=rgb(120,200,250, maxColorValue = 255)) +
geom_point(color=Var1) +
labs(title = "Frequência de Carros Elétricos por Ano",
x = "Ano",
y = "Carros em circulação")+
geom_text(nudge_y = 10)+
scale_fill_manual(values = df$Cor, name = "Combustível") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(eletric_CO2, aes(x = factor(Ano), y = Freq, group=Var1, label=Freq, fill=Var1)) +
geom_line(color=Var1) +
geom_point() +
labs(title = "Frequência de Carros Elétricos por Ano",
x = "Ano",
y = "Carros em circulação")+
geom_text(nudge_y = 10)+
scale_fill_manual(values = df$Cor, name = "Combustível") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(eletric_CO2, aes(x = factor(Ano), y = Freq, group=Var1, label=Freq, fill=Var1)) +
geom_line(color=aes(Var1)) +
geom_point() +
labs(title = "Frequência de Carros Elétricos por Ano",
x = "Ano",
y = "Carros em circulação")+
geom_text(nudge_y = 10)+
scale_fill_manual(values = df$Cor, name = "Combustível") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(eletric_CO2, aes(x = factor(Ano), y = Freq, group=Var1, label=Freq, fill=Var1)) +
geom_line(aes(color=Var1)) +
geom_point() +
labs(title = "Frequência de Carros Elétricos por Ano",
x = "Ano",
y = "Carros em circulação")+
geom_text(nudge_y = 10)+
scale_fill_manual(values = df$Cor, name = "Combustível") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(eletric_CO2, aes(x = factor(Ano), y = Freq, group=Var1, label=Freq, fill=Var1)) +
geom_line(aes(color=Var1)) +
geom_point() +
labs(title = "Frequência de Carros Elétricos por Ano",
x = "Ano",
y = "Carros em circulação")+
geom_text(nudge_y = 10)
ggplot(eletric_CO2, aes(x = factor(Ano), y = Freq, group=Var1, label=Freq, fill=Var1)) +
geom_line(aes(color=Var1)) +
geom_point(aes(color=Var1)) +
labs(title = "Frequência de Carros Elétricos por Ano",
x = "Ano",
y = "Carros em circulação")+
geom_text(nudge_y = 10)
ggplot(eletric_CO2, aes(x = factor(Ano), y = Freq, group=Var1, label=Freq, fill=Var1)) +
geom_line(aes(color=Var1)) +
geom_point(color = c('red','blue')) +
labs(title = "Frequência de Carros Elétricos por Ano",
x = "Ano",
y = "Carros em circulação")+
geom_text(nudge_y = 10)
ggplot(eletric_CO2, aes(x = factor(Ano), y = Freq, group=Var1, label=Freq, fill=Var1)) +
geom_line(aes(color=Var1)) +
geom_point(color=c('red','blue')) +
labs(title = "Frequência de Carros Elétricos por Ano",
x = "Ano",
y = "Carros em circulação")+
geom_text(nudge_y = 10)
ggplot(eletric_CO2, aes(x = factor(Ano), y = Freq, group=Var1, label=Freq, fill=Var1)) +
geom_line(aes(color=Var1)) +
geom_point(aes(color=c('red','blue'))) +
labs(title = "Frequência de Carros Elétricos por Ano",
x = "Ano",
y = "Carros em circulação")+
geom_text(nudge_y = 10)
ggplot(eletric_CO2, aes(x = factor(Ano), y = Freq, group=Var1, label=Freq, fill=Var1)) +
geom_line(aes(color=Var1)) +
geom_point(aes(color=Var1)) +
labs(title = "Frequência de Carros Elétricos por Ano",
x = "Ano",
y = "Carros em circulação")+
geom_text(nudge_y = 10)
ggplot(eletric_CO2, aes(x = factor(Ano), y = Freq, group=Var1, label=Freq, fill=Var1)) +
geom_line(aes(color=Var1)) +
geom_point(aes(color = c('blue', 'red'))) + # Cores fixas
labs(title = "Frequência de Carros Elétricos por Ano",
x = "Ano",
y = "Carros em circulação")+
geom_text(nudge_y = 10)
ggplot(eletric_CO2, aes(x = factor(Ano), y = Freq, group = Var1, label = Freq)) +
geom_point(aes(color = Var1)) + # Map color to Var1 using color scale (default)
labs(title = "Frequência de Carros Elétricos por Ano",
x = "Ano",
y = "Carros em circulação") +
geom_text(nudge_y = 10)
cores_fixas <- c("red", "green", "blue", "purple", "orange",
"black", "grey", "yellow", "pink", "teal")
ggplot(eletric_CO2, aes(x = factor(Ano), y = Freq, group = Var1, label = Freq)) +
geom_point(aes(color = cores_fixas[1:10])) + # Use the first 10 elements of the color vector
labs(title = "Frequência de Carros Elétricos por Ano",
x = "Ano",
y = "Carros em circulação") +
geom_text(nudge_y = 10)
ggplot(eletric_CO2, aes(x = factor(Ano), y = Freq, group=Var1, label=Freq, fill=Var1)) +
geom_line(aes(color=Var1)) +
geom_point(aes(color = c('blue', 'red'))) + # Cores fixas
labs(title = "Frequência de Carros Elétricos por Ano",
x = "Ano",
y = "Carros em circulação")+
geom_text(nudge_y = 10)
ggplot(eletric_CO2, aes(x = factor(Ano), y = Freq, group = Var1, label = Freq)) +
geom_point(aes(color = Var1)) + # Map color to Var1 using color scale (default)
labs(title = "Frequência de Carros Elétricos por Ano",
x = "Ano",
y = "Carros em circulação") +
geom_text(nudge_y = 10)
ggplot(eletric_CO2, aes(x = factor(Ano), y = Freq, group=Var1, label=Freq, fill=Var1)) +
geom_line(aes(color=Var1)) +
geom_point(aes(color=Var1)) +
labs(title = "Frequência de Carros Elétricos por Ano",
x = "Ano",
y = "Carros em circulação")+
geom_text(nudge_y = 10)
eletric_CO2 <- data.frame(Freq = numeric(nrow(dados)+nrow(df)),
Var1 = numeric(nrow(dados)+nrow(df)),
Ano = numeric(nrow(dados)+nrow(df)),
Cor = numeric(nrow(dados)+nrow(df))); eletric_CO2
eletric_CO2$Freq <- c((df$Freq),round(dados$media_CO2, 2)); eletric_CO2
eletric_CO2$Var1 <- c(rep('E',5),rep('Media CO2',5)); eletric_CO2
eletric_CO2$Ano <- df$Ano; eletric_CO2
eletric_CO2$Cor <- c(rep(rgb(120,200,250, maxColorValue = 255),5),
rep(rgb(245,140,76,maxColorValue = 255),5)); eletric_CO2
ggplot(eletric_CO2, aes(x = factor(Ano), y = Freq, group=Var1, label=Freq, fill=Var1)) +
geom_line(aes(color=Cor)) +
geom_point(aes(color=Var1)) +
labs(title = "Frequência de Carros Elétricos por Ano",
x = "Ano",
y = "Carros em circulação")+
geom_text(nudge_y = 10)
ggplot(eletric_CO2, aes(x = factor(Ano), y = Freq, group=Var1, label=Freq, fill=Var1)) +
geom_line(aes(color=Cor)) +
geom_point(aes(color=Cor)) +
labs(title = "Frequência de Carros Elétricos por Ano",
x = "Ano",
y = "Carros em circulação")+
geom_text(nudge_y = 10)
ggplot(eletric_CO2, aes(x = factor(Ano), y = Freq, group=Var1, label=Freq, fill=Var1)) +
geom_line(aes(color=Var1)) +
geom_point(aes(color=Var1)) +
labs(title = "Frequência de Carros Elétricos por Ano",
x = "Ano",
y = "Carros em circulação")+
geom_text(nudge_y = 10)
ggplot(eletric_CO2, aes(x = factor(Ano), y = Freq, group=Var1, label=Freq, fill=Var1)) +
geom_line(aes(color=Var1)) +
geom_point(aes(color=Var1)) +
labs(title = "Frequência de Carros Elétricos por Ano",
x = "Ano",
y = "Carros em circulação")+
geom_text(nudge_y = 10)+
scale_fill_manual(values = df_concatenado$Cor, name = "Combustível") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(eletric_CO2, aes(x = factor(Ano), y = Freq, group=Var1, label=Freq, fill=Var1)) +
geom_line(aes(color=Var1)) +
geom_point(aes(color=Var1)) +
labs(title = "Frequência de Carros Elétricos por Ano",
x = "Ano",
y = "Carros em circulação")+
geom_text(nudge_y = 10)+
scale_fill_manual(values = eletric_CO2, name = "Combustível") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(eletric_CO2, aes(x = factor(Ano), y = Freq, group=Var1, label=Freq, fill=Var1)) +
geom_line(aes(color=Var1)) +
geom_point(aes(color=Var1)) +
labs(title = "Frequência de Carros Elétricos por Ano",
x = "Ano",
y = "Carros em circulação")+
geom_text(nudge_y = 10)+
scale_fill_manual(values = eletric_CO2, name = "Combustível") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(eletric_CO2, aes(x = factor(Ano), y = Freq, group=Var1, label=Freq, fill=Var1)) +
geom_line(aes(color=Var1)) +
geom_point(aes(color=Var1)) +
labs(title = "Frequência de Carros Elétricos por Ano",
x = "Ano",
y = "Carros em circulação")+
geom_text(nudge_y = 10)+
scale_fill_manual(values = eletric_CO2$Cor, name = "Combustível") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(eletric_CO2, aes(x = factor(Ano), y = Freq, group=Var1, label=Freq, fill=Var1)) +
geom_line(aes(color=Var1)) +
geom_point(aes(color=Var1)) +
labs(title = "Frequência de Carros Elétricos por Ano",
x = "Ano",
y = "Carros em circulação")+
geom_text(nudge_y = 10)+
scale_fill_manual(values = eletric_CO2$Var1, name = "Combustível") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(eletric_CO2, aes(x = factor(Ano), y = Freq, group=Var1, label=Freq, fill=Var1)) +
geom_line(aes(color=Var1)) +
geom_point(aes(color=Var1)) +
labs(title = "Frequência de Carros Elétricos por Ano",
x = "Ano",
y = "Carros em circulação")+
geom_text(nudge_y = 10)
ggplot(dados, aes(x = ano, y = media_CO2, group=1,label=round(media_CO2,2))) +
geom_line(color =rgb(245,140,76,maxColorValue = 255)) +
geom_point(color = 'orange') +
labs(title = "Emissão média anual de CO2",
x = "Ano",
y = "Emissão média de CO2 (g/km)")+
geom_text(nudge_y = 2)
table(PT_all$"Fuel Type")
PT_year <- c(2018,2019,2020,2021,2022)
PT_data <- c('PT_2018','PT_2019','PT_2020','PT_2021','PT_2022')
for (df_name in PT_data){
df <- get(df_name)
max_brand <- max(table(df$Make))
min_brand <- min(table(df$Make))
name_max <- names(table(df$Make))[table(df$Make) == max_brand] #carros que mais entraram em circulação
name_min <- names(table(df$Make))[table(df$Make) == min_brand] #carros que menos entraram em circulação
cat(df_name,'\nMAX:', name_max,max_brand,'\nMIN: ',name_min,min_brand,'\n\n')
}
for (df_name in PT_data){
df <- get(df_name)
max_model <- max(table(df$Model))
name_max <- names(table(df$Model))[table(df$Model) == max_model]
cat(df_name,'\nMAX:', name_max,max_model,'\n\n\n')
}
more_polution_2018 <- PT_2018[which.max(PT_2018$'Test Emission CO2 (g/km)'),]
more_polution_2019 <- PT_2019[which.max(PT_2019$'Test Emission CO2 (g/km)'),]
more_polution_2020 <- PT_2020[which.max(PT_2020$'Test Emission CO2 (g/km)'),]
more_polution_2021 <- PT_2021[which.max(PT_2021$'Test Emission CO2 (g/km)'),]
more_polution_2022 <- PT_2022[which.max(PT_2022$'Test Emission CO2 (g/km)'),]
more_polution <- rbind(more_polution_2018, more_polution_2019, more_polution_2020, more_polution_2021, more_polution_2022)
PT_2018_without_E <- PT_2018[PT_2018$"Fuel Type" != "E",]
PT_2019_without_E <- PT_2019[PT_2019$"Fuel Type" != "E",]
PT_2020_without_E <- PT_2020[PT_2020$"Fuel Type" != "E",]
PT_2021_without_E <- PT_2021[PT_2021$"Fuel Type" != "E",]
PT_2022_without_E <- PT_2022[PT_2022$"Fuel Type" != "E",]
PT_all_without_E <- PT_all[PT_all$`Fuel Type` != 'E',]
less_polution_2018 <- PT_2018_without_E[which.min(PT_2018_without_E$'Test Emission CO2 (g/km)'),]
less_polution_2019 <- PT_2019_without_E[which.min(PT_2019_without_E$'Test Emission CO2 (g/km)'),]
less_polution_2020 <- PT_2020_without_E[which.min(PT_2020_without_E$'Test Emission CO2 (g/km)'),]
less_polution_2021 <- PT_2021_without_E[which.min(PT_2021_without_E$'Test Emission CO2 (g/km)'),]
less_polution_2022 <- PT_2022_without_E[which.min(PT_2022_without_E$'Test Emission CO2 (g/km)'),]
less_polution <- rbind(less_polution_2018, less_polution_2019, less_polution_2020, less_polution_2021, less_polution_2022)
lista_dfs <- list() #lista para guardar dataframes
for (df_name in PT_data) {
get_df <- get(df_name)
fuels_type <- names(table(get_df$"Fuel Type"))
cores <- c(rgb(245,140,76,maxColorValue = 255), #diesel
rgb(120,200,250, maxColorValue = 255), #eletrico
rgb(245,191,76,maxColorValue = 255), #gasolina
rgb(12,124,250,maxColorValue = 255)) #hibrido
df <- as.data.frame(table(get_df$`Fuel Type`))
df_cores <- data.frame(Fuel_type = fuels_type, Cor = cores)
df <- merge(df, df_cores, by.x = "Var1", by.y = "Fuel_type", all.x = TRUE)
# Adiciona uma coluna com o ano de acontecimento
df$Ano <- as.numeric(substring(df_name, 4, 7))  # Extrai o ano do nome do dataframe
# Adiciona o dataframe à lista
lista_dfs[[df_name]] <- df
}
# Concatena os dataframes da lista
df_concatenado <- do.call(rbind, lista_dfs); df_concatenado
ggplot(df_concatenado, aes(x = factor(Ano), y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Frequência de Combustíveis por Ano",
x = "Ano", y = "Frequência") +
scale_fill_manual(values = df_concatenado$Cor, name = "Combustível") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(PT_all_without_E, aes(x=`Engine Capacity (cm3)`,
y=`Test Emission CO2 (g/km)`))+
geom_point()+
geom_smooth(method=lm, se=FALSE)
year_mean_CO2 <- tapply(PT_all$`Test Emission CO2 (g/km)`,
PT_all$Year, mean); year_mean_CO2
year_mean_CO2 <- tapply(PT_all$`Test Emission CO2 (g/km)`,
PT_all$Year, mean); year_mean_CO2
years <- names(year_mean_CO2); years
dados <- data.frame(ano = years, media_CO2 = year_mean_CO2); dados
df <- df_concatenado[df_concatenado$Var1=='E',]; df #pegando a quantidade dos carros elétricos de cada ano
df <- mutate(df, Freq = Freq/100); df #dividindo por 100 para conseguir fazer a correlação carros e co2
df_novo <- data.frame()
df_novo <- cbind('Var1', 'Freq', 'Year'); df_novo
df_novo$Freq <- rbind(c(df$Freq, dados$media_CO2)); df_novo
eletric_CO2 <- data.frame(Freq = numeric(nrow(dados)+nrow(df)),
Var1 = numeric(nrow(dados)+nrow(df)),
Ano = numeric(nrow(dados)+nrow(df)),
Cor = numeric(nrow(dados)+nrow(df))); eletric_CO2
eletric_CO2$Freq <- c((df$Freq),round(dados$media_CO2, 2)); eletric_CO2
eletric_CO2$Var1 <- c(rep('E',5),rep('Media CO2',5)); eletric_CO2
eletric_CO2$Ano <- df$Ano; eletric_CO2
eletric_CO2$Cor <- c(rep(rgb(120,200,250, maxColorValue = 255),5),
rep(rgb(245,140,76,maxColorValue = 255),5)); eletric_CO2
ggplot(eletric_CO2, aes(x = factor(Ano), y = Freq, group=Var1, label=Freq, fill=Var1)) +
geom_line(aes(color=Var1)) +
geom_point(aes(color=Var1)) +
labs(title = "Frequência de Carros Elétricos por Ano",
x = "Ano",
y = "Carros em circulação")+
geom_text(nudge_y = 10)
df_novo <- data.frame()
df_novo <- cbind('Var1', 'Freq', 'Year'); df_novo
df_novo$Freq <- rbind(c(df$Freq, dados$media_CO2)); df_novo
ggplot(eletric_CO2, aes(x = factor(Ano), y = Freq, group=Var1, label=Freq, fill=Var1)) +
geom_line(aes(color=Var1)) +
geom_point(aes(color=Var1)) +
labs(title = "Frequência de Carros Elétricos por Ano",
x = "Ano",
y = "Carros em circulação")+
geom_text(nudge_y = 10)
make_mean_CO2 <- tapply(PT_all_without_E$"Test Emission CO2 (g/km)", PT_all_without_E$Make, mean)
make_mean_CO2 <- sort(make_mean_CO2, decreasing = TRUE)
Make <- names(make_mean_CO2)[1:10]
make_more_polution <- data.frame(Make, mean_CO2 = make_mean_CO2[1:10])
max_make <- names(make_mean_CO2)[which.max(make_mean_CO2)]
make_more_polution$Is_Max <- ifelse(make_more_polution$Make == max_make, "Max", "Not Max")
color1 <- rgb(245,140,76,maxColorValue = 255)
color2 <- rgb(245,191,76,maxColorValue = 255)
make_more_polution$Color <- ifelse(make_more_polution$Is_Max == "Max", color1, color2)
ggplot(make_more_polution, aes(x = Make, y = mean_CO2, fill = Is_Max)) +
geom_bar(stat = "identity", width = 0.5) +
scale_fill_manual(values = c("Max" = color1, "Not Max" = color2)) +
labs(title = "10 Marcas com maior Média de Emissão de CO2",
x = "Marcas",
y = "Média de CO2 (g/km)") +
guides(fill=FALSE) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 16, lineheight = 1.2, margin = margin(b = 20)))
PT_all_without_E <- PT_all[PT_all$"Fuel Type" != "E",]
make_mean_CO2 <- tapply(PT_all_without_E$"Test Emission CO2 (g/km)", PT_all_without_E$Make, mean)
make_mean_CO2 <- sort(make_mean_CO2, decreasing = FALSE)
Make <- names(make_mean_CO2)[1:10]
make_less_polution <- data.frame(Make, mean_CO2 = make_mean_CO2[1:10])
less_make <- names(make_mean_CO2)[which.min(make_mean_CO2)]
make_less_polution$Is_Min <- ifelse(make_less_polution$Make == less_make, "Min", "Not Min")
color1 <- rgb(12,124,250,maxColorValue = 255)
color2 <- rgb(120,200,250, maxColorValue = 255)
make_less_polution$Color <- ifelse(make_less_polution$Is_Min == "Min", color1, color2)
ggplot(make_less_polution, aes(x = Make, y = mean_CO2, fill = Is_Min)) +
geom_bar(stat = "identity", width = 0.5) +
scale_fill_manual(values = c("Min" = color1, "Not Min" = color2)) +
labs(title = "10 Marcas com menor Média de Emissão de CO2",
x = "Marcas",
<<<<<<< HEAD
y = "Média de CO2 (g/km)")
>>>>>>> 16bb0359ab6fb77d49ddeeb362ed01453f512ae7
=======
y = "Média de CO2 (g/km)") +
guides(fill=FALSE) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 16, lineheight = 1.2, margin = margin(b = 20)))
PT_all_without_E$`Fuel Type` = with(PT_all_without_E, reorder(`Fuel Type`, `Test Emission CO2 (g/km)`, median))
color1 <- rgb(245,140,76,maxColorValue = 255)
color2 <- rgb(245,191,76,maxColorValue = 255)
color3 <- rgb(12,124,250,maxColorValue = 255)
ggplot(PT_all_without_E, aes(x =`Fuel Type`, y =`Test Emission CO2 (g/km)`)) +
geom_boxplot(aes(fill =`Fuel Type`)) +
geom_jitter(aes(color =`Fuel Type`), size = 0.3, alpha = 0.9) +
scale_fill_viridis(discrete = TRUE, alpha = 0.6) +
scale_color_manual(values = c("G" = color2, "D" = color1, "H" = color3)) + # Definir as cores para cada tipo de combustível
scale_x_discrete(labels = c("G" = "Gasolina", "D" = "Diesel", "H" = "Híbrido")) + # Alterar o nome das categorias
labs(x = "Tipo de Combustível", y = "Emissões de CO2 (g/km)") +
theme_ipsum() +
theme(
legend.position = "none",
plot.title = element_text(size = 11, face = "bold", hjust = 0.5)
) +
ggtitle("Emissões de CO2 (g/km) por tipo de Combustível")
ggplot(df_concatenado, aes(x = factor(Ano), y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Frequência de Combustíveis por Ano",
x = "Ano", y = "Frequência") +
scale_fill_manual(values = df_concatenado$Cor, name = "Combustível") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(df_concatenado, aes(x = factor(Ano), y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Frequência de Combustíveis por Ano",
x = "Ano", y = "Frequência") +
scale_fill_manual(values = df_concatenado$Cor, name = "Combustível")
cores[2]
ggplot(df_concatenado, aes(x = factor(Ano), y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Frequência de Combustíveis por Ano",
x = "Ano", y = "Frequência") +
#scale_fill_manual(values = df_concatenado$Cor, name = "Combustível")+
scale_color_manual(values = c("G" = cores[3], "D" = cores[1], "H" = cores[4], 'E'=cores[2]))
ggplot(df_concatenado, aes(x = factor(Ano), y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Frequência de Combustíveis por Ano",
x = "Ano", y = "Frequência") +
scale_fill_manual(values = df_concatenado$Cor, name = "Combustível")
gas <- PT_all[PT_all$'Fuel Type'=='G',]
diesel <- PT_all[PT_all$'Fuel Type'=='D',]
hybrids <- PT_all[PT_all$'Fuel Type'=='H',]
ggplot(gas, aes(x=`Engine Capacity (cm3)`,
y=`Test Emission CO2 (g/km)`))+
geom_point()+
geom_smooth(method=lm, se=FALSE)
View(gas)
View(gas)
View(gas)
ggplot(hybrids, aes(x=`Engine Capacity (cm3)`,
y=`Test Emission CO2 (g/km)`))+
geom_point()+
geom_smooth(method=lm, se=FALSE)
ggplot(diesel, aes(x=`Engine Capacity (cm3)`,
y=`Test Emission CO2 (g/km)`))+
geom_point()+
geom_smooth(method=lm, se=FALSE)
>>>>>>> c27d5f943cf57929412c44fdf4dcdcb7b1fe9460
