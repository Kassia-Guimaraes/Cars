<<<<<<< HEAD
seq(3, 36, by=3)
seq(1, 34, by=4)
seq(1, 34, by=3)
((rep(0.4, 12))^(seq(1, 34, by=3)))
((rep(exp(1), 12))^(seq(3, 36, by=3)))
((rep(0.4, 12))^(seq(1, 34, by=3)))
((rep(exp(1), 12))^(seq(3, 36, by=3)))*((rep(0.4, 12))^(seq(1, 34, by=3)))
d7 <- (((rep(exp(1), 12))^(seq(3, 36, by=3)))*((rep(0.4, 12))^(seq(1, 34, by=3))))
d7
(((rep(2, 10))^(seq(1,10)))*(seq(1,10)))
(((rep(2, 10))^(seq(1,10)))/(seq(1,10)))
##Exerc 8
w * 3
(((rep(exp(1), 21))^(rep((-2), 21)))*((rep(2,21))^(seq(0,20))))/(factorial(seq(0,20)))
(seq(2, 30))
(seq(2, 30))^(seq(2, 29))
(seq(2, 30))^(seq(2, 28))
(seq(2, 30))^(seq(2, 29))
length(seq(2, 30))
(seq(2, 30))^(rep(2, 29))
3*((seq(2,30))^(rep(3, 29)))
((seq(2, 30))^(rep(2, 29)))+(3*((seq(2,30))^(rep(3, 29))))
b8 <- ((seq(2, 30))^(rep(2, 29)))+(3*((seq(2,30))^(rep(3, 29))))
length(seq(1, 30))
((rep(2,30))^(seq(1,30)))
((rep(2,30))^(seq(1,30)))/(seq(1,30))
(((rep(3,30))^(seq(1,30)))/((seq(1,30))^(rep(2,30))))
(((rep(2,30))^(seq(1,30)))/(seq(1,30)))+(((rep(3,30))^(seq(1,30)))/((seq(1,30))^(rep(2,30))))
c8 <- (((rep(2,30))^(seq(1,30)))/(seq(1,30)))+(((rep(3,30))^(seq(1,30)))/((seq(1,30))^(rep(2,30))))
## Exerc 9
?cbind
A <- cbind(x,y)
A
type(A)
?type
typeof(A)
A <- cbind(x,y,x1)
typeof(A)
A <- cbind(x,y)
typeof(A)
B <- rbind(x,y)
B
B <- cbind(x, y, w)
D <- cbind(x, y, w)
D
D <- cbind(x, y, w, 1)
D
D <- cbind(x, y, w)
D
D <- cbind(x, y, w, seq(1,6))
D
D <- cbind(x, y, w, seq(1,3))
D
D <- cbind(x, y, w, seq(1,7))
D
D <- cbind(x, y, w, 1)
D
dim(A)
ncol(A)
class(x)
typeof(x)
class(x)
typeof(x)
class(x)
class(A)
typeof(A)
typeof(1)
typeof(2)
typeof('2')
class(x)
class(A)
class(´A´)
class("a")
E <- cbind(x, y, z)
E
F <- data.frame
F
F <- data.frame(x, y, z)
F
class(E)
class(F)
dim(F)
dim(E)
str(F)
?str
str(E)
mylist <- list(idade=x, altura=y, nome=z, ind=w, outro=u)
mylist
class(mylist)
class(mylist$idade)
str(mylist)
mean(mylist$idade)
summary(mylist)
mean(mylist$idade)
source("~/R/Lab/ficha1.R", echo=TRUE)
View(mylist)
View(D)
summary(F)
names(F)
## Exerc 9
?diag
diag(3)
diag(10, 3, 4)
A <- matrix(c(5,1,0,
3,−1,2,
A1 <- matrix(c(5,1,0,3,(-1),2,4,0,(-1)),
nrow=3,byrow=TRUE)
A1
B1 <- diag(c(1,2,4))
B1
?det
det(A)
det(A1)
dim(A)
?inverse
?solve
solve(A)
solve(A1)
dim(A1)
solve(A1)
A1
crossprod(solve(A1), A1)
solve(A1) %*% A1
crossprod((solve(A1)), A1)
solve(A1) %*% A1
(solve(A1)) %*% A1
crossprod((solve(A1)), A1)
(solve(A1)) %*% A1
crossprod((solve(A1)), A1)
(solve(A1)) %*% A1
# Criar duas matrizes de exemplo
matriz1 <- matrix(c(1, 2, 3, 4), nrow = 2, byrow = TRUE)
matriz2 <- matrix(c(5, 6, 7, 8), nrow = 2, byrow = TRUE)
# Multiplicar as matrizes usando o operador %*%
matriz_resultado <- matriz1 %*% matriz2
# Imprimir a matriz resultado
print(matriz_resultado)
# Multiplicar as matrizes usando o operador %*%
matriz_resultado <- matriz1 %*% matriz2
matriz_resultado2 <- crossprod(matriz1, matriz2)
# Imprimir a matriz resultado
print(matriz_resultado)
print(matriz_resultado2)
dim(A1)
y1 <- c(1,2,3)
?det
det(A1)
dim(A1)
?solve
solve(A1)
A1
(solve(A1)) %*% A1
solve(A1) * y1
solve(A1) %*% y1
A1 * x1
A1 %*% x1
dim(x1)
x1 <- solve(A1) %*% y1
dim(x1)
A1 %*% x1
y1
fim(y1)
dim(y1)
y1 <- c(1,2,3)
?det
det(A1)
dim(A1)
?solve
solve(A1)
A1
(solve(A1)) %*% A1
x1 <- solve(A1) %*% y1
dim(x1)
A1 %*% x1
y1
dim(y1)
dim(y1)
dim(x1)
x1 <- solve(A1) * y1
dim(x1)
A1 %*% x1
y1
dim(y1)
dim(x1)
A1 %*% x1
x1 <- solve(A1) %*% y1
dim(x1)
A1 %*% x1
y1
dim(y1)
dim(x1)
## Exerc 10
?airquality
airquality
air_data <- airquality
str(air_data)
View(air_data)
summary(air_data)
data_june <- subset(air_data, Month==6)
data_june
summary(data_june)
?split
dados_por_mes <- split(airquality$Temp, airquality$Month)
split(airquality$Temp, airquality$Month)
?sapply
split(airquality$Temp, airquality$Month)
mes_temp <- split(airquality$Temp, airquality$Month)
sapply(mes_temp, mean)
sapply(mes_temp, max)
summary(air_data)
aplly(is.na(air_data), 2, sum)
apply(is.na(air_data), 2, sum)
?apply
?witch
?which
which(is.na(air_data$Solar.R))
which.max(is.na(air_data$Solar.R))
which.max(air_data$Solar.R)
## Exerc 10
?airquality
subset(air_data, Temp>90)
subset(air_data, Temp>90 & Ozone>70)
subset(air_data, max(Wind))
subset(air_data, Wind == max(Wind))
table(air_data)
table(air_data$Month)
library(IRLR)
library(ILSR)
library(ISLR)
library(ISLR)
data(ISLR)
library(ISLR)
data(ISLR)
ISLR
?ISLR
??ISLR
library(cars98)
data(cars98)
library(MASS)
data(cars98)
library(MASS); data(Cars93); #attach(Cars93)
table(Cars93)
library(ISLR)
View(Cars93)
library(mlr3oml)
library(mlr3oml); library(mlr3)
install.packages('mlr3oml')
library(mlr3oml); library(mlr3)
data(mlr3)
??mlr3
library(mlr3oml)
library(mlr3oml); data(mlr3)
table(mlr3)
table(mlr3oml)
library(mlr3oml)
table(mlr3oml)
qnorm(0.95)
qnorm(0.975)
qt(0.975,9)
qt(0.975,49)
qnorm(0.995)
x = c(19, 11, 13, 13, 17)
x <- c(19, 11, 13, 13, 17)
x <- c(19, 11, 13, 13, 17)
y <- c(21,22,24,36,29)
mean(x)
mean(y)
x - mean(x)
X <- x - mean(x)
X <- X ^ 2
sum(X)
sum(X)/4
y - mean(y)
Y <- y - mean(y)
Y ^2
Y <- Y ^2
sum(Y)
sum(Y)/4
x - mean(x)
y - mean(y)
(x - mean(x)) * (y - mean(y))
sum((x - mean(x)) * (y - mean(y)))
cov(x,y)
matrix(x,y)
matrix(x;y)
matrix(x)
?matrix
matrix(c(x,y))
setwd("C:/Users/kassi/Documents/Python/lab/cars")
library(readr)
library(ggplot2)
library(tidyverse)
library(hrbrthemes)
library(viridis)
library(dplyr)
###### Importando dados ######
PT_all <- read_csv("modificated-data/PT-all.csv")
#Filtrar pelo ano de 2018
PT_2018 <- PT_all[PT_all$Year == "2018",]
#Filtrar pelo ano de 2019
PT_2019 <- PT_all[PT_all$Year == "2019",]
#Filtrar pelo ano de 2020
PT_2020 <- PT_all[PT_all$Year == "2020",]
#Filtrar pelo ano de 2021
PT_2021 <- PT_all[PT_all$Year == "2021",]
#Filtrar pelo ano de 2022
PT_2022 <- PT_all[PT_all$Year == "2022",]
consumption_eletrics <- read_csv("modificated-data/consumption-eletrics.csv")
consumption_fossilfuels <- read_csv("modificated-data/consumption-fossilfuels.csv")
consumption_hybrids <- read_csv("modificated-data/consumption-hybrids.csv")
consumption_fossilfuels <- consumption_fossilfuels[consumption_fossilfuels$`Fuel Type`!='ET',]
fuels_price <- read_csv('modificated-data/fuels-price.csv')
e_color <- rgb(120,200,250, maxColorValue = 255) #eletrico
gas_color <- rgb(245,191,76,maxColorValue = 255) #gasolina 95
diesel_color <- rgb(245,140,76,maxColorValue = 255) #diesel
ehybrid_color <- rgb(12,124,250,maxColorValue = 255) #hibrido parte elétrica
fhybrid_color <- '#F5AA4C' #híbrido combistível fossil
pgas_color <- '#F5D44C' #Gasolina 98
=======
labs(x = "Tipo de Combustível", y = "Consumo Combinado a cada 100 km") +
theme_minimal() +
theme(
legend.position = 'none',
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 12, hjust = 0.5),
axis.title.y = element_text(size = 12, hjust = 0.5),
legend.title = element_text(size = 11, face = "bold")
) +
ggtitle("Consumo Combinado do Carro vs Tipo de Combustível")
ggplot(fossil, aes(x =Fuel, y =Combined)) +
geom_boxplot(aes(fill =Fuel), alpha = 0.2) +
geom_jitter(aes(color =Fuel), size = 0.3, alpha = 0.9) +
scale_fill_viridis(discrete = TRUE, alpha = 0.6) +
scale_color_manual(values = c("G" = gas_color, "D" = diesel_color,
'PG'=pgas_color,'H_F'= fhybrid_color)) +
scale_fill_manual(values = c('G' = gas_color, "D" = diesel_color,
'PG'=pgas_color,'H_F'= fhybrid_color)) +
scale_x_discrete(labels = c("G" = "Gasolina 95", "D" = "Diesel",
'H_F'='Híbrido parte Combustível Fóssil',
'PG'='Gasolina 98')) +
labs(x = "Tipo de Combustível", y = "Consumo Combinado a cada 100 km") +
theme_ipsum() +
theme(
legend.position = "none",
plot.title = element_text(size = 11, face = "bold", hjust = 0.5)
) +
ggtitle("Consumo Combinado do Carro vs Tipo de Combustível")
ggplot(fossil, aes(x =Fuel, y =Combined)) +
geom_boxplot(aes(fill =Fuel), alpha = 0.3) +
geom_jitter(aes(color =Fuel), size = 0.3, alpha = 0.9) +
scale_fill_viridis(discrete = TRUE, alpha = 0.6) +
scale_color_manual(values = c("G" = gas_color, "D" = diesel_color,
'PG'=pgas_color,'H_F'= fhybrid_color)) +
scale_fill_manual(values = c('G' = gas_color, "D" = diesel_color,
'PG'=pgas_color,'H_F'= fhybrid_color)) +
scale_x_discrete(labels = c("G" = "Gasolina 95", "D" = "Diesel",
'H_F'='Híbrido parte Combustível Fóssil',
'PG'='Gasolina 98')) +
labs(x = "Tipo de Combustível", y = "Consumo Combinado a cada 100 km") +
theme_ipsum() +
theme(
legend.position = "none",
plot.title = element_text(size = 11, face = "bold", hjust = 0.5)
) +
ggtitle("Consumo Combinado do Carro vs Tipo de Combustível")
ggplot(fossil, aes(x =Fuel, y =Combined)) +
geom_boxplot(aes(fill =Fuel), alpha = 0.3) +
geom_jitter(aes(color =Fuel), size = 0.3, alpha = 0.9) +
scale_fill_viridis(discrete = TRUE, alpha = 0.6) +
scale_color_manual(values = c("G" = gas_color, "D" = diesel_color,
'PG'=pgas_color,'H_F'= fhybrid_color)) +
scale_fill_manual(values = c('G' = gas_color, "D" = diesel_color,
'PG'=pgas_color,'H_F'= fhybrid_color)) +
scale_x_discrete(labels = c("G" = "Gasolina 95", "D" = "Diesel",
'H_F'='Híbrido parte Combustível Fóssil',
'PG'='Gasolina 98')) +
labs(x = "Tipo de Combustível", y = "Consumo Combinado a cada 100 km") +
theme_minimal() +
theme(
legend.position = 'none',
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 12, hjust = 0.5),
axis.title.y = element_text(size = 12, hjust = 0.5),
legend.title = element_text(size = 11, face = "bold")
) +
ggtitle("Consumo Combinado do Carro vs Tipo de Combustível")
ggplot(electric, aes(x =Fuel, y =Combined)) +
geom_boxplot(aes(fill =Fuel), alpha=0.3) +
geom_jitter(aes(color =Fuel), size = 0.3, alpha = 1) +
scale_fill_viridis(discrete = TRUE, alpha = 1) +
scale_color_manual(values = c("H_E" = ehybrid_color,'E'=e_color)) +
scale_fill_manual(values = c("H_E" = ehybrid_color,'E'=e_color)) +
scale_x_discrete(labels = c("H_E" = "Híbrido parte Elétrico", 'E'='Elétrico')) +
labs(x = "Tipo de Combustível", y = "Consumo Combinado a cada 100 km") +
theme_minimal() +
theme(
legend.position = 'none',
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 12, hjust = 0.5),
axis.title.y = element_text(size = 12, hjust = 0.5),
legend.title = element_text(size = 11, face = "bold")
) +
ggtitle("Consumo Combinado do Carro vs Tipo de Combustível")
box_fossil <- ggplot(fossil, aes(x =Fuel, y =Combined)) +
geom_boxplot(aes(fill =Fuel), alpha = 0.3) +
geom_jitter(aes(color =Fuel), size = 0.3, alpha = 0.9) +
scale_fill_viridis(discrete = TRUE, alpha = 0.6) +
scale_color_manual(values = c("G" = gas_color, "D" = diesel_color,
'PG'=pgas_color,'H_F'= fhybrid_color)) +
scale_fill_manual(values = c('G' = gas_color, "D" = diesel_color,
'PG'=pgas_color,'H_F'= fhybrid_color)) +
scale_x_discrete(labels = c("G" = "Gasolina 95", "D" = "Diesel",
'H_F'='Híbrido parte Combustível Fóssil',
'PG'='Gasolina 98')) +
labs(x = "Tipo de Combustível", y = "Consumo Combinado a cada 100 km") +
theme_minimal() +
theme(
legend.position = 'none',
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 12, hjust = 0.5),
axis.title.y = element_text(size = 12, hjust = 0.5),
legend.title = element_text(size = 11, face = "bold")
) +
ggtitle("Consumo Combinado do Carro vs Tipo de Combustível")
box_elextric <- ggplot(electric, aes(x =Fuel, y =Combined)) +
geom_boxplot(aes(fill =Fuel), alpha=0.3) +
geom_jitter(aes(color =Fuel), size = 0.3, alpha = 1) +
scale_fill_viridis(discrete = TRUE, alpha = 1) +
scale_color_manual(values = c("H_E" = ehybrid_color,'E'=e_color)) +
scale_fill_manual(values = c("H_E" = ehybrid_color,'E'=e_color)) +
scale_x_discrete(labels = c("H_E" = "Híbrido parte Elétrico", 'E'='Elétrico')) +
labs(x = "Tipo de Combustível", y = "Consumo Combinado a cada 100 km") +
theme_minimal() +
theme(
legend.position = 'none',
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 12, hjust = 0.5),
axis.title.y = element_text(size = 12, hjust = 0.5),
legend.title = element_text(size = 11, face = "bold")
) +
ggtitle("Consumo Combinado do Carro vs Tipo de Combustível")
box_electric <- ggplot(electric, aes(x =Fuel, y =Combined)) +
geom_boxplot(aes(fill =Fuel), alpha=0.3) +
geom_jitter(aes(color =Fuel), size = 0.3, alpha = 1) +
scale_fill_viridis(discrete = TRUE, alpha = 1) +
scale_color_manual(values = c("H_E" = ehybrid_color,'E'=e_color)) +
scale_fill_manual(values = c("H_E" = ehybrid_color,'E'=e_color)) +
scale_x_discrete(labels = c("H_E" = "Híbrido parte Elétrico", 'E'='Elétrico')) +
labs(x = "Tipo de Combustível", y = "Consumo Combinado a cada 100 km") +
theme_minimal() +
theme(
legend.position = 'none',
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 12, hjust = 0.5),
axis.title.y = element_text(size = 12, hjust = 0.5),
legend.title = element_text(size = 11, face = "bold")
) +
ggtitle("Consumo Combinado do Carro vs Tipo de Combustível")
box_fossil + box_electric
library(patchwork)
box_fossil + box_electric
box_fossil <- ggplot(fossil, aes(x =Fuel, y =Combined)) +
geom_boxplot(aes(fill =Fuel), alpha = 0.3) +
geom_jitter(aes(color =Fuel), size = 0.3, alpha = 0.9) +
scale_fill_viridis(discrete = TRUE, alpha = 0.6) +
scale_color_manual(values = c("G" = gas_color, "D" = diesel_color,
'PG'=pgas_color,'H_F'= fhybrid_color)) +
scale_fill_manual(values = c('G' = gas_color, "D" = diesel_color,
'PG'=pgas_color,'H_F'= fhybrid_color)) +
scale_x_discrete(labels = c("G" = "Gasolina 95", "D" = "Diesel",
'H_F'='Híbrido parte Combustível Fóssil',
'PG'='Gasolina 98')) +
labs(x = "Tipo de Combustível", y = "Consumo Combinado a Litros/100 km") +
theme_minimal() +
theme(
legend.position = 'none',
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 12, hjust = 0.5),
axis.title.y = element_text(size = 12, hjust = 0.5),
legend.title = element_text(size = 11, face = "bold")
) +
ggtitle("Consumo Combinado do Carro vs Tipo de Combustível")
box_electric <- ggplot(electric, aes(x =Fuel, y =Combined)) +
geom_boxplot(aes(fill =Fuel), alpha=0.3) +
geom_jitter(aes(color =Fuel), size = 0.3, alpha = 1) +
scale_fill_viridis(discrete = TRUE, alpha = 1) +
scale_color_manual(values = c("H_E" = ehybrid_color,'E'=e_color)) +
scale_fill_manual(values = c("H_E" = ehybrid_color,'E'=e_color)) +
scale_x_discrete(labels = c("H_E" = "Híbrido parte Elétrico", 'E'='Elétrico')) +
labs(x = "Tipo de Combustível", y = "Consumo Combinado a kWh/100 km") +
theme_minimal() +
theme(
legend.position = 'none',
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 12, hjust = 0.5),
axis.title.y = element_text(size = 12, hjust = 0.5),
legend.title = element_text(size = 11, face = "bold")
) +
ggtitle("Consumo Combinado do Carro vs Tipo de Combustível")
library(patchwork)
box_fossil + box_electric
box_fossil <- ggplot(fossil, aes(x =Fuel, y =Combined)) +
geom_boxplot(aes(fill =Fuel), alpha = 0.3) +
geom_jitter(aes(color =Fuel), size = 0.3, alpha = 0.9) +
scale_fill_viridis(discrete = TRUE, alpha = 0.6) +
scale_color_manual(values = c("G" = gas_color, "D" = diesel_color,
'PG'=pgas_color,'H_F'= fhybrid_color)) +
scale_fill_manual(values = c('G' = gas_color, "D" = diesel_color,
'PG'=pgas_color,'H_F'= fhybrid_color)) +
scale_x_discrete(labels = c("G" = "Gasolina 95", "D" = "Diesel",
'H_F'='Híbrido parte Combustível Fóssil',
'PG'='Gasolina 98')) +
labs(x = "Tipo de Combustível", y = "Consumo Combinado a Litros/100 km",
title = "Consumo Combinado do Combustível Fóssil vs Tipo de Combustível") +
theme_minimal() +
theme(
legend.position = 'none',
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 12, hjust = 0.5),
axis.title.y = element_text(size = 12, hjust = 0.5),
legend.title = element_text(size = 11, face = "bold")
)
box_electric <- ggplot(electric, aes(x =Fuel, y =Combined)) +
geom_boxplot(aes(fill =Fuel), alpha=0.3) +
geom_jitter(aes(color =Fuel), size = 0.3, alpha = 1) +
scale_fill_viridis(discrete = TRUE, alpha = 1) +
scale_color_manual(values = c("H_E" = ehybrid_color,'E'=e_color)) +
scale_fill_manual(values = c("H_E" = ehybrid_color,'E'=e_color)) +
scale_x_discrete(labels = c("H_E" = "Híbrido parte Elétrico", 'E'='Elétrico')) +
labs(x = "Tipo de Combustível", y = "Consumo Combinado a kWh/100 km",
title = "Consumo Combinado dos Carros Elétricos vs Tipo de Combustível") +
theme_minimal() +
theme(
legend.position = 'none',
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 12, hjust = 0.5),
axis.title.y = element_text(size = 12, hjust = 0.5),
legend.title = element_text(size = 11, face = "bold")
)
library(patchwork)
box_fossil + box_electric
gas <- PT_all[PT_all$'Fuel Type'=='G',]
diesel <- PT_all[PT_all$'Fuel Type'=='D',]
hybrids <- PT_all[PT_all$'Fuel Type'=='H',]
cor(gas$`Engine Capacity (cm3)`,gas$`Test Emission CO2 (g/km)`)
cor(diesel$`Engine Capacity (cm3)`,diesel$`Test Emission CO2 (g/km)`)
cor(hybrids$`Engine Capacity (cm3)`,hybrids$`Test Emission CO2 (g/km)`)
gasoline_co2 <- ggplot(gas, aes(x=`Engine Capacity (cm3)`,
y=`Test Emission CO2 (g/km)`))+
geom_point(color=cores[3]) +
geom_smooth(method=lm, se=FALSE) +
labs(title = 'Cilindradas de Carros a Gasolina vs Emissão CO2',
x = 'Cilindradas', y = 'Emissão de CO2') +
theme_ipsum() +
theme(
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 12, hjust = 0.5),
axis.title.y = element_text(size = 12, hjust = 0.5)
)
cores <- c(rgb(245,140,76,maxColorValue = 255), #diesel
rgb(120,200,250, maxColorValue = 255), #eletrico
rgb(245,191,76,maxColorValue = 255), #gasolina
rgb(12,124,250,maxColorValue = 255)) #hibrido
>>>>>>> 3fd2f9efb5497798cc13359dc99bd4faab0f3ede
lista_dfs <- list() #lista para guardar dataframes
PT_year <- c(2018,2019,2020,2021,2022)
PT_data <- c('PT_2018','PT_2019','PT_2020','PT_2021','PT_2022')
cores <- c(rgb(245,140,76,maxColorValue = 255), #diesel
rgb(120,200,250, maxColorValue = 255), #eletrico
rgb(245,191,76,maxColorValue = 255), #gasolina
rgb(12,124,250,maxColorValue = 255)) #hibrido
for (df_name in PT_data) {
get_df <- get(df_name) #puxa o dataframe
fuels_type <- names(table(get_df$"Fuel Type")); #pega os tipos de combustíveis
dados_ano <- as.data.frame(table(get_df$`Fuel Type`)); #pega a quantidade de carros com aquele combustível no ano
# Adiciona uma coluna com o ano de acontecimento
dados_ano$Ano <- as.numeric(substring(df_name, 4, 7))  # Extrai o ano do nome do dataframe
# Adiciona o dataframe à lista
lista_dfs[[df_name]] <- dados_ano
}
# Concatena os dataframes da lista
df1 <- do.call(rbind, lista_dfs) #junta todas as linhas feitas pelo 'for'
year_mean_CO2 <- tapply(PT_all$`Test Emission CO2 (g/km)`,
PT_all$Year, mean) #faz a média da emissão co2 por ano
years <- names(year_mean_CO2)
df2 <- data.frame(Ano = years,Media_CO2 = year_mean_CO2) #cria um dataframe com as colunas ano e media_co2
df_completo <- merge(df1, df2, by = "Ano", fill = NA); head(df_completo) #junta os dataframes por coluna agrupando por ano
ggplot(df_completo) +
geom_bar(aes(x = Ano, y = Freq/1000, fill = Var1),
stat = 'identity', position = 'dodge') +
geom_line(aes(x = Ano, y = Media_CO2, colour = 'Média Emissão de CO2'),  # Change color to cyan
stat = "identity", size = 0.5) +
geom_point(aes(x = Ano, y = Media_CO2), color='red',size=2) +
geom_text(aes(x = Ano, y = Media_CO2, label = round(Media_CO2,2)),
nudge_y = 5) +
labs(title = 'Frequência de Carros por Combustível vs Emissão de CO2 por Ano',
x = 'Ano', y = 'Frequência de Carros em Circulação a Cada Mil Carros') +
theme_ipsum() +
theme(
legend.position = "right",
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 12, hjust = 0.5),
axis.title.y = element_text(size = 12, hjust = 0.5),
legend.title = element_text(size = 11, face = "bold")
) +
scale_fill_manual(values = c(D=cores[1], E=cores[2], G=cores[3], H=cores[4]),
labels = c(D='Diesel', E='Elétrico', G='Gasolina', H='Híbrido'),
name = "Combustível") +
guides(color = guide_legend(title = "CO2"))  # Add legend for the line
# Criando dataframe apenas com os consumos dos combustíveis
consum_e <- data.frame('Fuel'=consumption_eletrics$`Fuel Type`,
'Combined'=consumption_eletrics$`Combined (E) (Le/100 km)`)
consum_fossil <- data.frame('Fuel'=consumption_fossilfuels$`Fuel Type`,
'Combined'=consumption_fossilfuels$`Combined (F) (L/100 km)`)
consum_hy_ele <- data.frame('Fuel'=rep('H_E',length(consumption_hybrids$`Combined (E) (Le/100 km)`)),
'Combined'=consumption_hybrids$`Combined (E) (Le/100 km)`)
consum_hy_fos <- data.frame('Fuel'=rep('H_F', length(consumption_hybrids$`Combined (F) (L/100 km)`)),
'Combined'=consumption_hybrids$`Combined (F) (L/100 km)`)
fossil <- rbind(consum_fossil, consum_hy_fos)
electric <- rbind(consum_hy_ele, consum_e)
summary(electric[electric$Fuel=='E',]$Combined)
box_fossil <- ggplot(fossil, aes(x =Fuel, y =Combined)) +
geom_boxplot(aes(fill =Fuel), alpha = 0.3) +
geom_jitter(aes(color =Fuel), size = 0.3, alpha = 0.9) +
scale_fill_viridis(discrete = TRUE, alpha = 0.6) +
scale_color_manual(values = c("G" = gas_color, "D" = diesel_color,
'PG'=pgas_color,'H_F'= fhybrid_color)) +
scale_fill_manual(values = c('G' = gas_color, "D" = diesel_color,
'PG'=pgas_color,'H_F'= fhybrid_color)) +
scale_x_discrete(labels = c("G" = "Gasolina 95", "D" = "Diesel",
'H_F'='Híbrido parte Combustível Fóssil',
'PG'='Gasolina 98')) +
labs(x = "Tipo de Combustível", y = "Consumo Combinado de Combustível (Litros/100 km)",
title = "Consumo Combinado pelo Tipo de Combustível",
subtitle = 'Combustíveis Fósseis') +
theme_minimal() +
theme(
<<<<<<< HEAD
legend.position = 'none',
=======
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 12, hjust = 0.5),
axis.title.y = element_text(size = 12, hjust = 0.5)
)
diesel_co2 <- ggplot(diesel, aes(x=`Engine Capacity (cm3)`,
y=`Test Emission CO2 (g/km)`))+
geom_point(color=cores[1])+
geom_smooth(method=lm, se=FALSE)+
labs(title = 'Cilindradas de Carros a Diesel vs Emissão CO2',
x = 'Cilindradas', y = 'Emissão de CO2') +
theme_ipsum() +
theme(
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 12, hjust = 0.5),
axis.title.y = element_text(size = 12, hjust = 0.5)
)
hybrid_co2 <- ggplot(hybrids, aes(x=`Engine Capacity (cm3)`,
y=`Test Emission CO2 (g/km)`))+
geom_point(color=cores[4])+
geom_smooth(method=lm, se=FALSE)+
labs(title = 'Cilindradas de Carros Híbridos vs Emissão CO2',
x = 'Cilindradas', y = 'Emissão de CO2') +
theme_ipsum() +
theme(
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 12, hjust = 0.5),
axis.title.y = element_text(size = 12, hjust = 0.5)
)
library(patchwork)
gasoline_co2 / diesel_co2 / hybrid_co2
PT_data <- c('PT_2018','PT_2019','PT_2020','PT_2021','PT_2022')
lista_dfs <- list() #lista para guardar dataframes
for (df_name in PT_data) {
get_df <- get(df_name)
fuels_type <- names(table(get_df$"Fuel Type"))
cores <- c(rgb(245,140,76,maxColorValue = 255), #diesel
rgb(120,200,250, maxColorValue = 255), #eletrico
rgb(245,191,76,maxColorValue = 255), #gasolina
rgb(12,124,250,maxColorValue = 255)) #hibrido
df <- as.data.frame(table(get_df$`Fuel Type`))
# Adiciona uma coluna com o ano de acontecimento
df$Ano <- as.numeric(substring(df_name, 4, 7))  # Extrai o ano do nome do dataframe
# Adiciona o dataframe à lista
lista_dfs[[df_name]] <- df
}
# Concatena os dataframes da lista
df_concatenado <- do.call(rbind, lista_dfs); df_concatenado
ggplot(df_concatenado, aes(x = factor(Ano), y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = "dodge") +
<<<<<<< HEAD
labs(title = "Frequência de Combustíveis por Ano",
x = "Ano", y = "Frequência") +
scale_fill_manual(values = df_concatenado$Cor, name = "Combustível") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(PT_all_without_E, aes(x=`Engine Capacity (cm3)`,
y=`Test Emission CO2 (g/km)`))+
geom_point()+
geom_smooth(method=lm, se=FALSE)
year_mean_CO2 <- tapply(PT_all$`Test Emission CO2 (g/km)`,
PT_all$Year, mean); year_mean_CO2
year_mean_CO2 <- tapply(PT_all$`Test Emission CO2 (g/km)`,
PT_all$Year, mean); year_mean_CO2
years <- names(year_mean_CO2); years
dados <- data.frame(ano = years, media_CO2 = year_mean_CO2); dados
df <- df_concatenado[df_concatenado$Var1=='E',]; df #pegando a quantidade dos carros elétricos de cada ano
df <- mutate(df, Freq = Freq/100); df #dividindo por 100 para conseguir fazer a correlação carros e co2
df_novo <- data.frame()
df_novo <- cbind('Var1', 'Freq', 'Year'); df_novo
df_novo$Freq <- rbind(c(df$Freq, dados$media_CO2)); df_novo
eletric_CO2 <- data.frame(Freq = numeric(nrow(dados)+nrow(df)),
Var1 = numeric(nrow(dados)+nrow(df)),
Ano = numeric(nrow(dados)+nrow(df)),
Cor = numeric(nrow(dados)+nrow(df))); eletric_CO2
eletric_CO2$Freq <- c((df$Freq),round(dados$media_CO2, 2)); eletric_CO2
eletric_CO2$Var1 <- c(rep('E',5),rep('Media CO2',5)); eletric_CO2
eletric_CO2$Ano <- df$Ano; eletric_CO2
eletric_CO2$Cor <- c(rep(rgb(120,200,250, maxColorValue = 255),5),
rep(rgb(245,140,76,maxColorValue = 255),5)); eletric_CO2
ggplot(eletric_CO2, aes(x = factor(Ano), y = Freq, group=Var1, label=Freq, fill=Var1)) +
geom_line(aes(color=Var1)) +
geom_point(aes(color=Var1)) +
labs(title = "Frequência de Carros Elétricos por Ano",
x = "Ano",
y = "Carros em circulação")+
geom_text(nudge_y = 10)
df_novo <- data.frame()
df_novo <- cbind('Var1', 'Freq', 'Year'); df_novo
df_novo$Freq <- rbind(c(df$Freq, dados$media_CO2)); df_novo
ggplot(eletric_CO2, aes(x = factor(Ano), y = Freq, group=Var1, label=Freq, fill=Var1)) +
geom_line(aes(color=Var1)) +
geom_point(aes(color=Var1)) +
labs(title = "Frequência de Carros Elétricos por Ano",
x = "Ano",
y = "Carros em circulação")+
geom_text(nudge_y = 10)
make_mean_CO2 <- tapply(PT_all_without_E$"Test Emission CO2 (g/km)", PT_all_without_E$Make, mean)
make_mean_CO2 <- sort(make_mean_CO2, decreasing = TRUE)
Make <- names(make_mean_CO2)[1:10]
make_more_polution <- data.frame(Make, mean_CO2 = make_mean_CO2[1:10])
max_make <- names(make_mean_CO2)[which.max(make_mean_CO2)]
make_more_polution$Is_Max <- ifelse(make_more_polution$Make == max_make, "Max", "Not Max")
color1 <- rgb(245,140,76,maxColorValue = 255)
color2 <- rgb(245,191,76,maxColorValue = 255)
make_more_polution$Color <- ifelse(make_more_polution$Is_Max == "Max", color1, color2)
ggplot(make_more_polution, aes(x = Make, y = mean_CO2, fill = Is_Max)) +
geom_bar(stat = "identity", width = 0.5) +
scale_fill_manual(values = c("Max" = color1, "Not Max" = color2)) +
labs(title = "10 Marcas com maior Média de Emissão de CO2",
x = "Marcas",
y = "Média de CO2 (g/km)") +
guides(fill=FALSE) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 16, lineheight = 1.2, margin = margin(b = 20)))
PT_all_without_E <- PT_all[PT_all$"Fuel Type" != "E",]
make_mean_CO2 <- tapply(PT_all_without_E$"Test Emission CO2 (g/km)", PT_all_without_E$Make, mean)
make_mean_CO2 <- sort(make_mean_CO2, decreasing = FALSE)
Make <- names(make_mean_CO2)[1:10]
make_less_polution <- data.frame(Make, mean_CO2 = make_mean_CO2[1:10])
less_make <- names(make_mean_CO2)[which.min(make_mean_CO2)]
make_less_polution$Is_Min <- ifelse(make_less_polution$Make == less_make, "Min", "Not Min")
color1 <- rgb(12,124,250,maxColorValue = 255)
color2 <- rgb(120,200,250, maxColorValue = 255)
make_less_polution$Color <- ifelse(make_less_polution$Is_Min == "Min", color1, color2)
ggplot(make_less_polution, aes(x = Make, y = mean_CO2, fill = Is_Min)) +
geom_bar(stat = "identity", width = 0.5) +
scale_fill_manual(values = c("Min" = color1, "Not Min" = color2)) +
labs(title = "10 Marcas com menor Média de Emissão de CO2",
x = "Marcas",
<<<<<<< HEAD
y = "Média de CO2 (g/km)")
>>>>>>> 16bb0359ab6fb77d49ddeeb362ed01453f512ae7
=======
y = "Média de CO2 (g/km)") +
guides(fill=FALSE) +
theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 16, lineheight = 1.2, margin = margin(b = 20)))
PT_all_without_E$`Fuel Type` = with(PT_all_without_E, reorder(`Fuel Type`, `Test Emission CO2 (g/km)`, median))
color1 <- rgb(245,140,76,maxColorValue = 255)
color2 <- rgb(245,191,76,maxColorValue = 255)
color3 <- rgb(12,124,250,maxColorValue = 255)
ggplot(PT_all_without_E, aes(x =`Fuel Type`, y =`Test Emission CO2 (g/km)`)) +
geom_boxplot(aes(fill =`Fuel Type`)) +
geom_jitter(aes(color =`Fuel Type`), size = 0.3, alpha = 0.9) +
scale_fill_viridis(discrete = TRUE, alpha = 0.6) +
scale_color_manual(values = c("G" = color2, "D" = color1, "H" = color3)) + # Definir as cores para cada tipo de combustível
scale_x_discrete(labels = c("G" = "Gasolina", "D" = "Diesel", "H" = "Híbrido")) + # Alterar o nome das categorias
labs(x = "Tipo de Combustível", y = "Emissões de CO2 (g/km)") +
=======
labs(title = "Frequência de Carros pelo Combustível por Ano",
x = "Ano", y = "Frequência de Carros em Circulação") +
>>>>>>> 22becefb8fe5e996a9b88afeecb766f4b3e2d40b
theme_ipsum() +
theme(
legend.position = "right",
>>>>>>> 3fd2f9efb5497798cc13359dc99bd4faab0f3ede
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 12, hjust = 0.5),
axis.title.y = element_text(size = 12, hjust = 0.5),
legend.title = element_text(size = 11, face = "bold")
<<<<<<< HEAD
)
box_electric <- ggplot(electric, aes(x =Fuel, y =Combined)) +
geom_boxplot(aes(fill =Fuel), alpha=0.3) +
geom_jitter(aes(color =Fuel), size = 0.3, alpha = 1) +
scale_fill_viridis(discrete = TRUE, alpha = 1) +
scale_color_manual(values = c("H_E" = ehybrid_color,'E'=e_color)) +
scale_fill_manual(values = c("H_E" = ehybrid_color,'E'=e_color)) +
scale_x_discrete(labels = c("H_E" = "Híbrido parte Elétrico", 'E'='Elétrico')) +
labs(x = "Tipo de Combustível", y = "Consumo Combinado de Combustível (Le/100 km)",
title = "Consumo Combinado por Tipo de Combustível",
subtitle = 'Parte Elétrica') +
theme_minimal() +
theme(
legend.position = 'none',
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 12, hjust = 0.5),
axis.title.y = element_text(size = 12, hjust = 0.5),
legend.title = element_text(size = 11, face = "bold")
)
library(patchwork)
box_fossil / box_electric
box_fossil <- ggplot(fossil, aes(x =Fuel, y =Combined)) +
geom_boxplot(aes(fill =Fuel), alpha = 0.3) +
geom_jitter(aes(color =Fuel), size = 0.3, alpha = 0.9) +
scale_fill_viridis(discrete = TRUE, alpha = 0.6) +
scale_color_manual(values = c("G" = gas_color, "D" = diesel_color,
'PG'=pgas_color,'H_F'= fhybrid_color)) +
scale_fill_manual(values = c('G' = gas_color, "D" = diesel_color,
'PG'=pgas_color,'H_F'= fhybrid_color)) +
scale_x_discrete(labels = c("G" = "Gasolina 95", "D" = "Diesel",
'H_F'='Híbrido parte Combustível Fóssil',
'PG'='Gasolina 98')) +
labs(x = "Tipo de Combustível", y = "Consumo Combinado de Combustível (Litros/100 km)",
title = "Consumo Combinado pelo Tipo de Combustível",
subtitle = 'Combustíveis Fósseis') +
theme_minimal() +
theme(
legend.position = 'none',
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.title.x = element_text(size = 12, hjust = 0.5),
axis.title.y = element_text(size = 12, hjust = 0.5),
legend.title = element_text(size = 11, face = "bold")
)
box_electric <- ggplot(electric, aes(x =Fuel, y =Combined)) +
geom_boxplot(aes(fill =Fuel), alpha=0.3) +
geom_jitter(aes(color =Fuel), size = 0.3, alpha = 1) +
scale_fill_viridis(discrete = TRUE, alpha = 1) +
scale_color_manual(values = c("H_E" = ehybrid_color,'E'=e_color)) +
scale_fill_manual(values = c("H_E" = ehybrid_color,'E'=e_color)) +
scale_x_discrete(labels = c("H_E" = "Híbrido parte Elétrico", 'E'='Elétrico')) +
labs(x = "Tipo de Combustível", y = "Consumo Combinado de Combustível (Le/100 km)",
title = "Consumo Combinado por Tipo de Combustível",
subtitle = 'Parte Elétrica') +
theme_minimal() +
theme(
legend.position = 'none',
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.title.x = element_text(size = 12, hjust = 0.5),
axis.title.y = element_text(size = 12, hjust = 0.5),
legend.title = element_text(size = 11, face = "bold")
)
library(patchwork)
box_fossil / box_electric
box_fossil <- ggplot(fossil, aes(x =Fuel, y =Combined)) +
geom_boxplot(aes(fill =Fuel), alpha = 0.3) +
geom_jitter(aes(color =Fuel), size = 0.3, alpha = 0.9) +
scale_fill_viridis(discrete = TRUE, alpha = 0.6) +
scale_color_manual(values = c("G" = gas_color, "D" = diesel_color,
'PG'=pgas_color,'H_F'= fhybrid_color)) +
scale_fill_manual(values = c('G' = gas_color, "D" = diesel_color,
'PG'=pgas_color,'H_F'= fhybrid_color)) +
scale_x_discrete(labels = c("G" = "Gasolina 95", "D" = "Diesel",
'H_F'='Híbrido parte Combustível Fóssil',
'PG'='Gasolina 98')) +
labs(x = "Tipo de Combustível", y = "Consumo Combinado de Combustível (Litros/100 km)",
title = "Consumo Combinado pelo Tipo de Combustível",
subtitle = 'Combustíveis Fósseis') +
theme_minimal() +
theme(
legend.position = 'none',
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
axis.title.x = element_text(size = 11, hjust = 0.5),
axis.title.y = element_text(size = 12, hjust = 0.5),
legend.title = element_text(size = 11, face = "bold")
)
box_electric <- ggplot(electric, aes(x =Fuel, y =Combined)) +
geom_boxplot(aes(fill =Fuel), alpha=0.3) +
geom_jitter(aes(color =Fuel), size = 0.3, alpha = 1) +
scale_fill_viridis(discrete = TRUE, alpha = 1) +
scale_color_manual(values = c("H_E" = ehybrid_color,'E'=e_color)) +
scale_fill_manual(values = c("H_E" = ehybrid_color,'E'=e_color)) +
scale_x_discrete(labels = c("H_E" = "Híbrido parte Elétrico", 'E'='Elétrico')) +
labs(x = "Tipo de Combustível", y = "Consumo Combinado de Combustível (Le/100 km)",
title = "Consumo Combinado por Tipo de Combustível",
subtitle = 'Parte Elétrica') +
theme_minimal() +
theme(
legend.position = 'none',
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
plot.subtitle = element_text(size = 11, hjust = 0.5),
axis.title.x = element_text(size = 12, hjust = 0.5),
axis.title.y = element_text(size = 12, hjust = 0.5),
legend.title = element_text(size = 11, face = "bold")
)
library(patchwork)
box_fossil / box_electric
box_fossil + box_electric
summary(fossil[fossil$Fuel=='PG',])
summary(fossil[fossil$Fuel=='G',])
summary(fossil[fossil$Fuel=='D',])
summary(fossil[fossil$Fuel=='H_F',])
summary(electric[electric$Fuel=='E',]$Combined)
summary(electric[electric$Fuel=='H_E',]$Combined)
=======
) +
<<<<<<< HEAD
ggtitle("Emissões de CO2 (g/km) por tipo de Combustível")
ggplot(df_concatenado, aes(x = factor(Ano), y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Frequência de Combustíveis por Ano",
x = "Ano", y = "Frequência") +
scale_fill_manual(values = df_concatenado$Cor, name = "Combustível") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(df_concatenado, aes(x = factor(Ano), y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Frequência de Combustíveis por Ano",
x = "Ano", y = "Frequência") +
scale_fill_manual(values = df_concatenado$Cor, name = "Combustível")
cores[2]
ggplot(df_concatenado, aes(x = factor(Ano), y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Frequência de Combustíveis por Ano",
x = "Ano", y = "Frequência") +
#scale_fill_manual(values = df_concatenado$Cor, name = "Combustível")+
scale_color_manual(values = c("G" = cores[3], "D" = cores[1], "H" = cores[4], 'E'=cores[2]))
ggplot(df_concatenado, aes(x = factor(Ano), y = Freq, fill = Var1)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Frequência de Combustíveis por Ano",
x = "Ano", y = "Frequência") +
scale_fill_manual(values = df_concatenado$Cor, name = "Combustível")
gas <- PT_all[PT_all$'Fuel Type'=='G',]
diesel <- PT_all[PT_all$'Fuel Type'=='D',]
hybrids <- PT_all[PT_all$'Fuel Type'=='H',]
ggplot(gas, aes(x=`Engine Capacity (cm3)`,
y=`Test Emission CO2 (g/km)`))+
geom_point()+
geom_smooth(method=lm, se=FALSE)
View(gas)
View(gas)
View(gas)
ggplot(hybrids, aes(x=`Engine Capacity (cm3)`,
y=`Test Emission CO2 (g/km)`))+
geom_point()+
geom_smooth(method=lm, se=FALSE)
ggplot(diesel, aes(x=`Engine Capacity (cm3)`,
y=`Test Emission CO2 (g/km)`))+
geom_point()+
geom_smooth(method=lm, se=FALSE)
>>>>>>> c27d5f943cf57929412c44fdf4dcdcb7b1fe9460
=======
scale_fill_manual(values = c(D=cores[1], E=cores[2], G=cores[3], H=cores[4]),
labels = c(D='Diesel', E='Elétrico', G='Gasolina', H='Híbrido'),
name = "Combustível")
>>>>>>> 22becefb8fe5e996a9b88afeecb766f4b3e2d40b
setwd("C:/Users/vanes/OneDrive/Desktop/LE/aulas.py/CO2_ProjectShared")
>>>>>>> 3fd2f9efb5497798cc13359dc99bd4faab0f3ede
